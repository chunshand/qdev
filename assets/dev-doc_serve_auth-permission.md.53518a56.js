import{_ as e,o as a,c as t,V as r}from"./chunks/framework.a7fe02d8.js";const u=JSON.parse('{"title":"认证与权限","description":"","frontmatter":{},"headers":[],"relativePath":"dev-doc/serve/auth-permission.md","filePath":"dev-doc/serve/auth-permission.md"}'),o={name:"dev-doc/serve/auth-permission.md"},s=r('<h1 id="认证与权限" tabindex="-1">认证与权限 <a class="header-anchor" href="#认证与权限" aria-label="Permalink to &quot;认证与权限&quot;">​</a></h1><p>一个稍微复杂点的服务端，则就会带有认证与权限的机制。</p><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>基于jwt机制，以及该项目有着 admin api 两个业务场景。但是用户体系则使用的同一个表，不同的是后台用户的admin字段为true作为区分，存储在jwt里。</p><h2 id="装饰器" tabindex="-1">装饰器 <a class="header-anchor" href="#装饰器" aria-label="Permalink to &quot;装饰器&quot;">​</a></h2>',5),i=[s];function n(d,c,_,h,l,p){return a(),t("div",null,i)}const f=e(o,[["render",n]]);export{u as __pageData,f as default};
